/*
    This file is part of nutr.

    nutr is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    nutr is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with nutr.  If not, see <https://www.gnu.org/licenses/>.

    Copyright (C) 2020-2022 Udo Friman-Gayer and Oliver Papst
*/

#pragma once

// clang-format off
#cmakedefine01 USE_HADRON_PHYSICS
#cmakedefine01 USE_LENDGAMMANUCLEAR
#cmakedefine PRODUCTION_CUT_LOW_KEV @PRODUCTION_CUT_LOW_KEV@

#include "@HADRON_ELASTIC@.hh"
#include "@HADRON_INELASTIC@.hh"

using HadronElastic = @HADRON_ELASTIC@;
using HadronInelastic = @HADRON_INELASTIC@;
// clang-format on

struct PhysicsBuildOptions {
  constexpr static double production_cut_low_keV = PRODUCTION_CUT_LOW_KEV;
  constexpr static bool use_hadron_physics = static_cast<bool>(USE_HADRON_PHYSICS);
  constexpr static bool use_lendgammanuclear = static_cast<bool>(USE_LENDGAMMANUCLEAR);
};
inline constexpr PhysicsBuildOptions physics_build_options;

