# This file is part of nutr.

# nutr is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# nutr is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with nutr.  If not, see <https://www.gnu.org/licenses/>.

# Copyright (C) 2020 Udo Friman-Gayer


import ctypes

lib = ctypes.cdll.LoadLibrary('@PROJECT_BINARY_DIR@/src/fundamentals/primary_generator/angular_distribution_source/angular_distribution/libw_dir_dir.so')

lib.w_dir_dir.restype = ctypes.c_double
lib.w_dir_dir.argtypes = [
    ctypes.c_double,
    ctypes.c_double,
    ctypes.c_int,
    ctypes.c_int,
    ctypes.c_int,
    ctypes.c_int,
    ctypes.c_double,
    ctypes.c_int,
    ctypes.c_int,
    ctypes.c_int,
    ctypes.c_int,
    ctypes.c_double,
    ctypes.c_int,
    ctypes.c_int
]

def w_dir_dir(
    theta, phi, 
    two_J_ini, p_init, 
    two_L_ini_to_int, two_Lp_ini_to_int, delta_ini_to_int, 
    two_J_int, p_int, 
    two_L_int_to_fin, two_Lp_int_to_fin, delta_int_to_fin, 
    two_J_fin, p_fin
    ):
    """Direction-direction correlation

It is assumed that a nucleus is excited from an initial (ini) state to and intermediate (int) \
state by the absorption of a photon which propagates in positive z-direction. \
The intermediate excited state decays to an final (fin) state by the emission of a photon. \
The angular distribution of the emitted photon is described by this function in terms of \
the polar- and aximuthal angle in spherical coordinates.

In the following, the variable X may be any of the three state labels ini, int, or fin, \
and Xp denotes one of the labels other than X.
    
    Parameters
    ----------
    theta: float
        Polar angle in radians. theta == 0 is the positive z axis.
    phi: float
        Azimuthal angle in radians. theta == 0.5*pi, phi == 0 is the positive x axis, \
theta == 0.5*pi, phi == 0.5*pi is the positive y axis. In fact, the direction-direction correlation is independent of the azimuthal angle.
    two_J_X: int
        Two times the angular momentum quantum number of the initial state X in units of \
the reduced Planck constant.
    p_X: int
        Parity number of the state X. p_X == -1 means negative, p_X == 1 means positive parity.
    two_L_X_to_Xp: int
        Two times the primary multipolarity for the transition from state X to Xp.
    two_Lp_X_to_Xp: int
        Two times the secondary multipolarity for the transition from state X to Xp.
    delta_X_to_Xp: float
        Multipole mixing ratio for the two multipolarities in the transition from state X to Xp.

    Returns
    -------
    float
        Angular distribution
    """
    return lib.w_dir_dir(
        theta, phi, 
        two_J_ini, p_init, 
        two_L_ini_to_int, two_Lp_ini_to_int, delta_ini_to_int, 
        two_J_int, p_int, 
        two_L_int_to_fin, two_Lp_int_to_fin, delta_int_to_fin, 
        two_J_fin, p_fin        
    )
